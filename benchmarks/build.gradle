/*
 * Licensed to Crate.io GmbH ("Crate") under one or more contributor
 * license agreements.  See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.  Crate licenses
 * this file to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.  You may
 * obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * However, if you have executed another commercial license agreement
 * with Crate these terms will supersede the license and you may use the
 * software solely pursuant to the terms of the relevant commercial agreement.
 */

// generate uberjar with all benchmarks
apply plugin: 'application'
// mainClassName must come after application but before shadow plugin application
// to avoid a warning. See https://github.com/johnrengelman/shadow/issues/336
mainClassName = 'org.openjdk.jmh.Main'
apply from: "$rootDir/gradle/javaModule.gradle"

archivesBaseName = 'crate-benchmarks'

test.enabled = false

dependencies {
    implementation project(':server')
    implementation(testFixtures(project(':server')))
    implementation(testFixtures(project(':libs:dex')))
    implementation(project(':extensions:functions'))
    implementation project(':libs:sql-parser')

    implementation "joda-time:joda-time:${versions.jodatime}"
    implementation "com.carrotsearch:hppc:${versions.carrotsearch_hppc}"
    implementation "com.google.guava:guava:${versions.guava}"

    implementation 'org.openjdk.jmh:jmh-core:1.25'
    implementation 'org.openjdk.jmh:jmh-generator-annprocess:1.25'
    annotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.25'

    // Dependencies of JMH
    runtimeOnly 'net.sf.jopt-simple:jopt-simple:4.6'
    runtimeOnly 'org.apache.commons:commons-math3:3.2'
}

compileTestJava {
    options.annotationProcessorPath = configurations.default
}

tasks.shadowJar.configure {
  classifier = "all"
}

shadowJar {
    append 'META-INF/services/org.apache.lucene.codecs.DocValuesFormat'
    append 'META-INF/services/org.apache.lucene.codecs.Codec'
    append 'META-INF/services/org.apache.lucene.codecs.PostingsFormat'
    exclude('com/carrotsearch/randomizedtesting/**')

    // We keep the benchmarks in the test sources instead of main, because
    // IntelliJ doesn't pick up the `:server / testOutput` dependencies otherwise
    // So test.output contains the benchmarks which we want to have in the jar
    from sourceSets.test.output
}

task jmhJar (
    dependsOn: shadowJar,
    description: 'Generates an uberjar with the microbenchmarks and all dependencies',
    group: 'Benchmark'
)
