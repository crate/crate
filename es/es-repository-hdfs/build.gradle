/*
 * Licensed to Crate under one or more contributor license agreements.
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.  Crate licenses this file
 * to you under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.  You may
 * obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied.  See the License for the specific language governing
 * permissions and limitations under the License.
 *
 * However, if you have executed another commercial license agreement
 * with Crate these terms will supersede the license and you may use the
 * software solely pursuant to the terms of the relevant commercial
 * agreement.
 */
description = 'The HDFS repository plugin adds support for Hadoop Distributed File-System (HDFS) repositories.'
def classname = 'org.elasticsearch.repositories.hdfs.HdfsPlugin'
def plugin_repositoryhdfs_version = '1.0.0'

configurations {
    extraLibs.transitive = false
}

dependencies {
    compile project(':es:es-core')
    compile "org.apache.hadoop:hadoop-client:${versions.hadoop2}"
    compile "org.apache.hadoop:hadoop-common:${versions.hadoop2}"
    compile "org.apache.hadoop:hadoop-annotations:${versions.hadoop2}"
    compile "org.apache.hadoop:hadoop-auth:${versions.hadoop2}"
    compile "org.apache.hadoop:hadoop-hdfs:${versions.hadoop2}"
    compile 'org.apache.htrace:htrace-core:3.1.0-incubating'
    compile 'com.google.guava:guava:16.0.1'
    compile 'com.google.protobuf:protobuf-java:2.5.0'
    compile 'commons-logging:commons-logging:1.1.3'
    compile 'commons-cli:commons-cli:1.2'
    compile 'commons-collections:commons-collections:3.2.2'
    compile ('commons-configuration:commons-configuration:1.6') {
        exclude group: 'commons-beanutils', module: 'commons-beanutils-core'
    }
    compile 'commons-io:commons-io:2.4'
    compile 'commons-lang:commons-lang:2.6'
    compile 'javax.servlet:servlet-api:2.5'
    compile "org.slf4j:slf4j-api:${versions.slf4j}"

    extraLibs "org.apache.hadoop:hadoop-client:${versions.hadoop2}"
    extraLibs "org.apache.hadoop:hadoop-common:${versions.hadoop2}"
    extraLibs "org.apache.hadoop:hadoop-annotations:${versions.hadoop2}"
    extraLibs "org.apache.hadoop:hadoop-auth:${versions.hadoop2}"
    extraLibs "org.apache.hadoop:hadoop-hdfs:${versions.hadoop2}"
    extraLibs 'org.apache.htrace:htrace-core:3.1.0-incubating'
//    extraLibs 'com.google.guava:guava:16.0.1'
    extraLibs 'com.google.protobuf:protobuf-java:2.5.0'
//    extraLibs 'commons-logging:commons-logging:1.1.3'
//    extraLibs 'commons-cli:commons-cli:1.2'
    extraLibs 'commons-collections:commons-collections:3.2.2'
    extraLibs ('commons-configuration:commons-configuration:1.6') {
        exclude group: 'commons-beanutils', module: 'commons-beanutils-core'
    }
    extraLibs 'commons-io:commons-io:2.4'
    extraLibs 'commons-lang:commons-lang:2.6'
    extraLibs 'javax.servlet:servlet-api:2.5'
//    extraLibs "org.slf4j:slf4j-api:${versions.slf4j}"
}

def pluginDir = file('../upstream/plugins/repository-hdfs')

sourceSets {
    main {
        java {
            srcDir "$pluginDir/src/main/java"
        }
        output.resourcesDir = null
    }
    test {
        output.resourcesDir = null
        output.classesDir = null
    }
}

idea {
    module {
        contentRoot = pluginDir
        excludeDirs += files('build', 'src/test')
    }
}

jar {dependsOn(['writePropertiesFileRepositoryHSFS', 'copyToLib'])}

task writePropertiesFileRepositoryHSFS << {
    def file = new File(buildDir.path + '/plugin-descriptor.properties')
    def parentDir = new File(file.parent)
    parentDir.mkdirs()
    file.createNewFile()

    ant.propertyfile(file: file.path, comment: 'Plugin Descriptor') {
        ant.entry(key: 'name', value: project.name)
        ant.entry(key: 'description', value: project.description)
        ant.entry(key: 'version', value: plugin_repositoryhdfs_version)
        ant.entry(key: 'site', value: true)
        ant.entry(key: 'elasticsearch.version', value: "${versions.elasticsearch}")
        ant.entry(key: 'java.version', value: project.targetCompatibility)
        ant.entry(key: 'classname', value: classname)
    }
}

task copyToLib(type: Copy) {
    into buildDir.path + '/lib'
    from configurations.extraLibs
}
