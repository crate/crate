==================
Unreleased Changes
==================

This file collects *unreleased* changes only.

For release notes, see:

  https://crate.io/docs/reference/en/latest/release_notes/index.html

For developers: changes should be recorded here (using RST syntax) as you are
developing CrateDB. When a new release is being cut, changes will be moved to
the appropriate section of the docs.

Breaking Changes
================

 - Columns aren't implicitly cast to a type anymore. Whenever columns are
   compared to Literals (e.g. 'string', 1, 1.2), these literals will be
   converted to the column type but not vice-versa. The column can still be
   manually cast to a type by using a cast function.

 - Table ``information_schema.table_constraints`` is now returning
   ``constraint_name`` as type string instead of type array. Constraint type
   ``PRIMARY_KEY`` has been changed to ``PRIMARY KEY``. Also PRIMARY KEY
   constraint is not returned when not explicitly defined.

Changes
=======

- Clients using the postgres wire protocol will now receive an additional
  ``crate_version`` ``ParameterStatus`` message during the connection
  establishment. This can be used to identify the server as ``CrateDB``.

- Added support to manually retry the allocation of shards that failed to
  allocate using ``ALTER CLUSTER REROUTE RETRY FAILED``.

- Hadoop2 dependencies for HDFS repository plugin has been upgraded to 2.8.1.

- Added new cluster setting ``routing.rebalance.enable`` that allows to
  enable or disable shard rebalancing on the cluster.

- Table ``information_schema.key_column_usage`` now gets populated with primary
  key information of user tables.

- Table ``information_schema.table_constraints`` is now returning ``NOT_NULL``

- Fixed an issue that caused an error ``Primary key value must not be NULL``
  to be thrown when trying to insert rows in a table that has a generated
  column which is used both in ``PARTITION_BY`` and ``PRIMARY KEY``.

- Added support to manually control the allocation of shards using
  ``ALTER TABLE REROUTE``.
  Supported reroute-options: MOVE, ALLOCATE REPLICA, CANCEL

- Added new system table ``sys.allocations`` which lists shards and their
  allocation state including the reasoning why they are in a certain state.

- Upgraded Elasticsearch to v5.6.3

- Added new table setting ``allocation.max_retries`` that defines the number of
  attempts to allocate a shard before giving up and leaving it unallocated.

- Function arguments are now linked to each other, where possible. This enables
  type inference between arguments such that arguments can be converted to match
  a function's signature. For example, ``coalesce(integer, long)`` would have
  resulted in an "unknown function" message. We now convert this call into
  ``coalesce(long, long)``. The conversion is possible through a type precedence
  list and convertibility checks on the data types.

- Functions which accept regular expression flags now throw an error when
  invalid flags are provided.

- Added the ``pg_backend_pid()`` function for enhanced PostgreSQL compatibility.

- Added support for the PSQL ParameterDescription message which allows to get
  the parameter types in prepared statements up front without specifying the
  actual arguments first. This fixes compatibility issues with some drivers.
  Only works for ``SELECT``, ``DELETE`` and ``UPDATE`` statements at the moment.

Fixes
=====

- Removed horizontal scroll from the console editor in the Admin UI.

- Fixed Admin UI shard view to show all nodes, even those which have no shards.

- Fixed an issue that cause the status-bar of the Admin UI to show an error if
  the user has an adblocker enabled.

- Fixed Tables view of the Admin UI to show messages when the table list is
  empty.

- Fixed an issue where internal cluster state updates could reset the active
  ingestion rules, causing all ingest operations to stop.
