==================
Unreleased Changes
==================

This file collects *unreleased* changes only.

For release notes, see:

  https://crate.io/docs/reference/en/latest/release_notes/index.html

For developers: changes should be recorded here (using RST syntax) as you are
developing CrateDB. When a new release is being cut, changes will be moved to
the appropriate section of the docs.

Breaking Changes
================

- Dropped support for tables that have been created with CrateDB prior to
  version 2.0. Tables which require upgrading are indicated in the cluster
  checks, including visually shown in the Admin UI, if running the latest 2.2
  or 2.3 release. The upgrade of tables needs to happen before updating CrateDB
  to this version. This can be done by exporting the data with ``COPY TO`` and
  importing it into a new table with ``COPY FROM``.  Alternatively you can use
  ``INSERT`` with query.

- Data paths as defined in ``path.data`` must not contain the cluster name as a
  folder. Data paths which are not compatible with this version are indicated
  in the node checks, including visually shown in the Admin UI, if running the
  latest 2.2 or 2.3 release.

- The ``bootstrap.seccomp`` setting that controls system call filters has been
  replaced in favour of ``bootstrap.system_call_filter``.

- The ``error_trace`` GET parameter of the HTTP endpoint only allows ``true``
  and ``false`` in lower case. Other values are not allowed any more and will
  result in a parsing exception.

- Store level throttling settings (``indices.store.throttle.*``) have been
  removed.

- The gateway recovery table setting ``recovery.initial_shards`` has been
  removed. Nodes will recover their unassigned local primary shards
  immediatelly after restart.

Changes
=======

- Statistics for jobs and operations are enabled by default.  If you don't need
  any statistics, please set ``stats.enabled`` to ``false``.

- ``ALTER TABLE <name> OPEN`` will now wait for all shards to become active
  before returning to be consistent with the behaviour of other statements.

- CrateDB is now based on Elasticsearch 6.1.3 and Lucene 7.1.0.

- Added a new ``bengali`` language analyzer and a ``bengali_normalization``
  token filter.

- Added new ``cluster.routing.allocation.disk.watermark.flood_stage`` setting,
  that controls at which disk usage indices should become read-only to prevent
  running out of disk space. There is also a new node check that indicates
  whether the threshold is exceeded.

- Added new tokenizers ``simple_pattern`` and ``simple_pattern_split`` which
  allow to tokenize text for the fulltext index by a regular expression pattern.

- Changed ``BEGIN`` and ``SET SESSION`` to no longer require ``DQL``
  permissions on the ``CLUSTER`` level.

- Implemented a `Ready` node status JMX metric expressing if the node is ready
  for processing SQL statements.

Fixes
=====

- Fixed an Admin-UI issue that caused the translation strings to not be loaded
  correctly.

- Fixed an issue that only occurred in Enterprise Edition, when privileges
  are enabled. This issue would result in an exception about missing
  privileges being thrown, rather than the expected Unsupported Feature
  exception, when attempting operations on closed tables/partitions as a
  user.

- Fixed an issue that caused a ``NullPointerException`` if ``REFRESH TABLE``
  was executed on a table with closed partitions.

- Fixed an issue that caused ``MissingPrivilegeException`` for non-superusers
  for queries with ``UNION ALL``.

- Fixed a regression that caused assignments of arrays including parameter
  placeholders to not work correctly.

- Fixed a regression which caused ``IS NOT NULL`` predicates on columns of type
  ``array(object)`` to not match correctly.

- Fixed an issue that caused the ``percentile`` aggregation to fail if an array
  containing a single item was passed as ``fractions``.

- Fixed an issue which resulted in an exception when a routing column was
  compared against a sub-query inside a ``WHERE`` clause.

- Fixed a performance regression resulting in a table scan instead of a NO-MATCH
  if a sub-query used inside a ``WHERE`` clause returns no result
  (https://github.com/crate/crate/issues/6773).
