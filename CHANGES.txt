==================
Unreleased Changes
==================

This file collects *unreleased* changes only.

For release notes, see:

  https://crate.io/docs/reference/en/latest/release_notes/index.html

For developers: changes should be recorded here (using RST syntax) as you are
developing CrateDB. When a new release is being cut, changes will be moved to
the appropriate section of the docs.

Breaking Changes
================

 - `GROUP BY` now executes against the real columns and fallbacks to 
   substituting possible aliases in case the columns do not exist. This will 
   cause statements that used alias values that shadowed multiple columns with 
   the same name to fail (eg. alias `name` in a join statement where multiple 
   tables have the real column `name`). Statements with aliases that shadowed 
   a real column and also retrieve that real column will no longer fail as the 
   real column will be used in the `GROUP BY` clause (this will not be 
   ambigous anymore).

Changes
=======

 - Changed the Enterprise License missing check message, as well as lowering
   the severity from HIGH to LOW.

 - Added a warning message to the log if the Unofficial Elasticsearch HTTP
   REST API is enabled via ``es.api.enabled`` setting.

  - Updated Elasticsearch to v5.4.3.

 - Enabled ``mapping.total_fields.limit`` setting for tables in order to be
   able to increase maximum number of columns higher than the default of
   ``1000``.

 - Table functions now support value expressions as arguments.

Fixes
=====

 - Fixed the error message to be more descriptive when the condition in a 
   `CASE/WHEN` expression is not a boolean.

 - Fixed an issue which caused an exception if ``EXPLAIN`` is used on a
   statement that uses the ``ANY (array_expression)`` operator.

 - Allow support of conditional expression with different return types that can
   be converted to a single return type.

 - Fixed support for negate on null in conditional expression.

 - Fixed support for setting ``write.wait_for_active_shards`` on a partitioned
   table.

 - Added missing documentation about the default value of the table setting
   ``write.wait_for_active_shards``.

 - Improved user privileges matching to constant time complexity.

 - Improved the error message if an invalid table column reference is used in
   ``INSERT`` statements.

 - Optimized the algorithm that determines the best ordering of the tables in
   a ``JOIN``.

 - Updated Crash to ``0.21.4`` which fixes an issue with ``\verbose`` command
   not working correctly when ``Crash`` is started without ``--verbose``.

 - Implemented flexible return type of sum-function depending on the input
   types, which was previously only double.

 - Fixed a regression causing incorrect results for queries with ``DISTINCT``
   on scalar functions. E.g.::

     SELECT DISTINCT upper(name) FROM t

 - Fixed a race condition which made it possible to create new columns in a
   partition of a partitioned table that didn't match the type of the same
   column of sibling partitions.

 - Upgraded Admin UI version to fix an issue with the Twitter tutorial

 - Fixed a NPE when running ``select port from sys.nodes`` and
   ``psql.enabled: false`` was set

 - Fixed an issue where the user that gets provided by the client on connect is
   not always used as current user if host based authentication is disabled.

 - Corrected the documentation of the ``version`` column of the ``sys.snapshots``
   table. It was described as the CrateDB version wereas it's an internal
   version instead.

 - Dropping an empty partitioned table did not drop related table privileges.

 - Implemented ``NOT NULL`` constraint validation for nested object columns,
   which was previously ignored. E.g.::

     CREATE TABLE test (
       stuff object(dynamic) AS (
         level1 object(dynamic) AS (
           level2 string not null
         ) NOT NULL
       ) NOT NULL
     )

 - Internal system queries are now executed under the "crate" superuser if user
   management is enabled.

 - ``!= ANY()`` could not operate on arrays with more than 1024 elements. This
   limit has been increased by default to 8192. A new node setting:
   ``indices.query.bool.max_clause_count`` has been exposed to allow to
   configure this limit.

 - Fixed an issue which caused unrelated table privileges to be lost after a
   table was renamed.

 - Fixed an issue that prevents CrateDB from bootstrap on Windows hosts.
