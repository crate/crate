==================
Unreleased Changes
==================

This file collects *unreleased* changes only.

For release notes, see:

  https://crate.io/docs/reference/en/latest/release_notes/index.html

For developers: changes should be recorded here (using RST syntax) as you are
developing CrateDB. When a new release is being cut, changes will be moved to
the appropriate section of the docs.

Breaking Changes
================

 - `GROUP BY` now executes against the real columns and fallbacks to
   substituting possible aliases in case the columns do not exist. This will
   cause statements that used alias values that shadowed multiple columns with
   the same name to fail (eg. alias `name` in a join statement where multiple
   tables have the real column `name`). Statements with aliases that shadowed
   a real column and also retrieve that real column will no longer fail as the
   real column will be used in the `GROUP BY` clause (this will not be
   ambiguous anymore).

 - Change semantics of ``IN`` operator to behave like ``= ANY``. The argument
   list for ``IN`` now has to be comprised of the same type. For example,
   this is now an illegal ``IN`` query because the list mixes integer and
   double type::

     Select * from t1 where id IN (1, 1.2, 2)

   This would get translated into the following and throw an error::

     Select * from t1 where id = ANY([1, 1.2, 3])

Changes
=======

 - Upgraded Elasticsearch to v5.5.2.

 - Added new tab in Enterprise Edition of the Admin UI to display users
   and their privileges.

 - The documentation link in the Admin UI now points to the documentation
   for the major.minor (e.g. 2.1) version of CrateDB, instead of
   major.minor.hotfix (e.g. 2.1.1).

 - Added node cluster check for cluster-name folder in data path directory.

 - Update Crash to ``0.22.1`` which includes the following changes:

    - Added a status toolbar that prints the current session info.

    - Start autocompletion for non-command keys at the 3rd character.

 - Introduce support for single column subselects in `ANY` and `IN`, e.g.::

     Select * from t1 where id = ANY(select id from t2)
     Select * from t1 where id IN (select id from t2)

 - Improved resiliency of the table rename operation.

 - Relaxed column naming restrictions.

 - Improved resiliency of drop, close and open table operations

 - Added empty tables `KEY_COLUMN_USAGE` and `REFERENTIAL_CONSTRAINTS` to
  `INFORMATION_SCHEMA` to be more compliant with the SQL99 standard.

Fixes
=====

 - Fixed an issue causing global aggregations with ``JOINs`` on virtual tables
   (sub-selects) which contain ``LIMIT`` to return incorrect results. E.g.::

     SELECT COUNT(*) FROM
       (SELECT * FROM t1 ORDER BY a LIMIT 5) t1,
     JOIN
       t2
     ON t1.a = t2.b

 - Fixed an issue that caused an error when trying to create a table with a
   generated column expression of type array.

 - Fixed an issue when using GRANT/REVOKE/DENY statements on a table with a
   custom schema set. The statements would result in permission changed on the
   default ``doc`` schema.

 - Fixed an issue with ``INNER`` and ``CROSS JOINS`` on more than 2 tables that
   could result in a ``Iterator is not on a row`` error.

 - Fixed empty ``account_user``-column in twitter tutorial plugin of the
   Admin UI.
