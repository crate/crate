==================
Unreleased Changes
==================

This file collects *unreleased* changes only.

For release notes, see:

  https://crate.io/docs/reference/en/latest/release_notes/index.html

For developers: changes should be recorded here (using RST syntax) as you are
developing CrateDB. When a new release is being cut, changes will be moved to
the appropriate section of the docs.

Breaking Changes
================

 - ``SELECT`` statements without any ``FROM`` items are no longer executed 
   against the ``sys.cluster`` table, but against a virtual table with no 
   columns. Queries including ``sys.cluster`` columns but no explicit ``FROM`` 
   item will now result in a ``ColumnUnknownException``.

 - onModule() method had been removed from io.crate.Plugin interface,
   so createGuiceModules() must be used instead.

 - ``srv`` and ``azure`` are no longer valid configuration options for ``discovery.type``.
   Instead there is a new ``discovery.zen.hosts_provider`` settings which can
   be set to either ``srv`` or ``azure``.

Breaking Changes (Packaging only)
=================================

 - The sigar jar and object files have been moved from ``plugins/sigar`` to
   ``lib/sigar``.

Changes
=======

 - Added SSL/TLS support for HTTP endpoints.

 - Added new HBA setting ``ssl`` which allows to control whether
   users have to connect with ssl enabled or disabled.

 - Added SSL/TLS support for PostgreSQL Wire Protocol.

 - Updated Elasticsearch to 5.1.2
 - Extended the output of the  ``EXPLAIN`` statement.

 - Added support for joins on virtual tables.

Fixes
=====

 - Fixed a bug in the memory accounting of the circuit breaker for HTTP
   results when querying for columns of undefined type.

 - Fixed issue that caused an exception when querying the `_id` column using all
   defined primary keys inside the ``WHERE`` clause over the HTTP API.

 - Fixed wrong results when querying ``IS NULL`` on an array of objects.

 - Fixed an issue that caused an Exception to be thrown on ``JOIN`` queries
   with 4 or more tables when an ``ORDER BY`` is also applied.

 - Fixed an issue that resulted in rows could not be queried by primary keys
   when the order of the primary key columns on insert differs from the order of
   the primary keys on the table definition.
   Note: If records are already inserted by using a different primary key column
   order, they must be re-inserted, otherwise queries will still fail.

 - Fixed an issue that could cause ``DELETE`` by query  and ``UPDATE``
   statements to fail on datasets larger than 10_000 rows.

 - Improved the resiliency of queries on `sys.nodes`: If a node disconnects
   during the execution of a query it will no longer fail.

 - Added proper handling when memory requirements of a ``JOIN`` query exceeds
   the available memory. Instead of having OutOfMemoryException thrown which
   led to killed nodes in the cluster, the issue is detected and the query is
   killed without affecting the cluster.

 - Fixed an issue that could cause ``DELETE`` statements to fail instead of
   "not matching" if there was a ``_version`` column in the ``WHERE`` clause.

 - Fixed an error handling issue that could lead to the termination of a node
   in very rare cases. (Usually if a user invoked the `KILL` statement)

 - Fixed issue where bulk operations like `insert from dynamic queries` and
   ``COPY FROM`` did not stop after being killed.

 - ``CREATE USER`` and ``DROP USER`` statements will now only respond after all
   nodes in the cluster processed the change.

 - Fixed an issue that caused an exception to be thrown when using ``unnest``
   with 10 or more columns.
