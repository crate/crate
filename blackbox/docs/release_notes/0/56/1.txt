.. _version_0.56.1:

==============
Version 0.56.1
==============

Released on 2016/10/10.

Changelog
=========

 - Negations of non-numeric literals now cause a query to fail instead of
   silently ignoring the negation.

 - Fix: The ``minimum_should_match`` fulltext search option was ignored
   which lead to incorrect results for queries with multiple terms when
   ``minimum_should_match`` was explicitly set to a non-default value.

 - Fixed an issue that causes the ``try_cast`` function to fail while casting
   the WKT representation of a point with invalid coordinates to geo_point.

 - All operations on closed partitions result in error now.

 - Fixed an issue that could cause ``COPY <table> TO DIRECTORY`` statements to
   fail.

 - Fixed an issue that might cause queries to fail with a ``Same bucket of a
   page set more than once`` error.

 - Fixed an issue that could cause arrays with null entries to cause a NPE
   during the generation of another error message.

 - Fixed an issue with self joins when columns from both relations are
   used in where clause. e.g.::

     FROM table t1, table t2 WHERE t1.col = 'foo' and t2.col = 'bar'

 - Fixed a bug where the ``ANY`` operator fails in the ``WHERE`` clause if a
   subscript is used as an expression. e.g.::

     'value' = any(obj_array[1]['a']['b'])

 - Fix: ``WHERE`` clauses with a ``NOT`` operator where the column
   reference resolves to ``NULL`` now return the correct results:
   ``NOT NULL`` -> ``NULL`` -> no match.

 - Fix: The ``count`` aggregation function counts null values. e.g.::

     count(cast(null as string))

 - Fixed evaluation of ``NOT NULL`` (=> ``NULL``) in ``WHERE`` clause.

 - Fix: Prevented usage of ``MATCH`` predicates on columns of both relations
   of a join if they cannot be applied to each of them separately. e.g.::

     FROM t1, t2 WHERE match(t1.txt, 'foo') OR match(t2.txt, 'bar')

 - Fixed an issue which could cause ``EXPLAIN`` statements to fail.
