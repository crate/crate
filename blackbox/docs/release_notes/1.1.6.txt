.. _version_1.1.6:

=============
Version 1.1.6
=============

Released on 2017/06/23.

.. NOTE::

   If you are upgrading a cluster, you must be running CrateDB 0.57.0 or higher
   before you upgrade to 1.1.6.

   If you want to perform a `rolling upgrade`_, your current CrateDB version
   number must be :ref:`version_1.1.1` or higher. If you want to upgrade from a
   version prior to this, the upgrade will introduce all of the breaking
   changes listed for :ref:`version_1.1.0`, and will require a `full restart
   upgrade`_.

.. WARNING::

   Before upgrading, you should `back up your data`_.

.. _rolling upgrade: http://crate.io/docs/crate/guide/best_practices/rolling_upgrade.html
.. _full restart upgrade: http://crate.io/docs/crate/guide/best_practices/full_restart_upgrade.html
.. _back up your data: https://crate.io/a/backing-up-and-restoring-crate/

Fixes
=====

 - Fixed an issue that caused an exception to be thrown when applying
   aggregations on generated columns of a table.

 - Fixed a bug in the memory accounting of the circuit breaker for HTTP
   results when querying for columns of undefined type.

 - Fixed issue that caused an exception when querying the ``_id`` column using
   all defined primary keys inside the ``WHERE`` clause over the HTTP API.

 - Fixed wrong results when querying ``IS NULL`` and ``IS NOT NULL`` on an
   array of objects.

 - Fixed an issue that caused an Exception to be thrown on ``JOIN`` queries
   with 4 or more tables when an ``ORDER BY`` is also applied.

 - Fixed an issue that resulted in rows being unable to be queried by primary
   keys, when the order of the primary key columns on insert differed from
   the order of the primary key columns on the table definition.
   Note: If records are already inserted by using a different primary key
   column order, they must be re-inserted, otherwise queries will still fail
   for these rows.

 - Improved the resiliency of queries on ``sys.nodes``: If a node disconnects
   during the execution of a query it will no longer fail.

 - Added proper handling when memory requirements of a ``JOIN`` query exceeds
   the available memory. Instead of having OutOfMemoryException thrown which
   led to killed nodes in the cluster, the issue is detected and the query is
   killed without affecting the cluster.

 - Fixed an issue that could cause ``DELETE`` statements to fail instead of
   "not matching" if there was a ``_version`` column in the ``WHERE`` clause.

 - Fixed an error handling issue that could lead to the termination of a node
   in very rare cases. (Usually if a user invoked the ``KILL`` statement)

 - Fixed an issue that caused an exception to be thrown when using ``unnest``
   with 10 or more columns.
