.. highlight:: psql
.. _conditional:

=====================
Conditional Functions
=====================

See below for a list of available conditional functions.


coalesce('first_arg', second_arg [, ... ]) returns same type as arguments
-------------------------------------------------------------------------

The ``coalesce`` function takes one or more arguments of the same type and
returns the first non-null value of these. The result will be NULL only if all
the arguments evaluate to NULL.

::

    cr> select coalesce(clustered_by, 'nothing')
    ...   from information_schema.tables
    ...   where table_name='nodes';
    +-----------------------------------+
    | coalesce(clustered_by, 'nothing') |
    +-----------------------------------+
    | nothing                           |
    +-----------------------------------+
    SELECT 1 row in set (... sec)


greatest('first_arg', second_arg[ , ... ]) returns same type as arguments
-------------------------------------------------------------------------

The ``greatest`` function takes one or more arguments of the same type
and will return the largest value of these. NULL values in the arguments
list are ignored. The result will be NULL only if all the arguments
evaluate to NULL.

::

    cr> select greatest(1, 2)
    ...   from sys.cluster;
    +----------------+
    | greatest(1, 2) |
    +----------------+
    | 2              |
    +----------------+
    SELECT 1 row in set (... sec)


least('first_arg', second_arg[ , ... ]) returns same type as arguments
----------------------------------------------------------------------

The ``least`` function takes one or more arguments of the same type
and will return the smallest value of these. NULL values in the arguments
list are ignored. The result will be NULL only if all the arguments
evaluate to NULL.

::

    cr> select least(1, 2)
    ...   from sys.cluster;
    +-------------+
    | least(1, 2) |
    +-------------+
    | 1           |
    +-------------+
    SELECT 1 row in set (... sec)


nullif('first_arg', second_arg) returns same type as arguments
--------------------------------------------------------------

The ``nullif`` function compares two arguments of the same type and, if they
have the same value, returns NULL; otherwise returns the first argument.

::

    cr> select nullif(schema_name, 'sys')
    ...   from information_schema.tables
    ...   where table_name='nodes';
    +----------------------------+
    | nullif(schema_name, 'sys') |
    +----------------------------+
    | NULL                       |
    +----------------------------+
    SELECT 1 row in set (... sec)

