.. highlight:: psql
.. _sql_ref_refresh:

===========
``REFRESH``
===========

Refresh one or more tables explicitly.

Synopsis
========

::

    REFRESH TABLE (table_ident [ PARTITION (partition_column=value [ , ... ])] [, ...] )

Description
===========

The REFRESH TABLE command refreshes one or more tables and all its rows,
making all changes made to that table available to all further commands.

The ``PARTITION`` clause can be used to only refresh specific partitions of a
partitioned table. All columns by which a table is partitioned are required.

In case the ``PARTITION`` clause is omitted all partitions will be refreshed.
For performance reasons doing that should be avoided if possible.

See :ref:`partitioned_tables` for more information on partitioned tables.



Without issuing this statement there is no guarantee that a change
(``UPDATE``, ``DELETE``, ``COPY`` or ``INSERT``) will be seen by an
immediately following ``SELECT`` statement for the row(s) affected by
this change. By default a refresh is scheduled periodically.

Internally a refresh opens a new table reader, which is then used by
all subsequent searches on the affected table.

For further details see :ref:`refresh_data`. For changing the refresh
interval see :ref:`sql_ref_refresh_interval`.

Parameters
==========

:table_ident: The name (optionally schema-qualified) of an existing
    table that is to be refreshed.

:partition_column: Column name by which the table is partitioned.


``PARTITION`` Clause
====================

::

    [ PARTITION ( partition_column = value [ , ... ] ) ]


:partition_column: The name of the column by which the table is partitioned.
                   All partition columns that were part of the
                   :ref:`partitioned_by_clause` of the :ref:`ref-create-table`
                   statement must be specified.

:value: The columns value.
