apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'

archivesBaseName = 'crate-sql'

// we do not want to have elasticsearch here, since we provide it in :es
configurations {
    all*.exclude group: 'org.elasticsearch'
    sharedCompile.extendsFrom compile
    benchmarksCompile.extendsFrom testCompile
    benchmarksRuntime.extendsFrom testRuntime, benchmarksCompile
}

dependencies {
    compile project(':es')
    compile project(':core')
    compile project(':blob')
    compile project(':sql-parser')
    compile ('com.amazonaws:aws-java-sdk-s3:1.9.34') {
        // es provides a compatible version
        exclude group: 'joda-time', module: 'joda-time'
    }
    compile 'org.apache.commons:commons-math3:3.4.1'
    testCompile project(':testing')
    testCompile 'org.skyscreamer:jsonassert:1.2.0'
    testCompile ('org.powermock:powermock-module-junit4:1.6.1') {
        exclude group: 'junit', module: 'junit'
    }
    testCompile ('org.powermock:powermock-api-mockito:1.6.1') {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.mockito', module: 'mockito-all'
    }

    benchmarksCompile 'com.carrotsearch:junit-benchmarks:0.7.2'
}

buildscript {
    repositories {
        mavenCentral()
    }
}

test {
    testLogging.exceptionFormat = 'full'

    // fix powermock issue - causing VerifyErrors being thrown
    // see: https://issues.jboss.org/browse/JASSIST-228
    jvmArgs '-XX:-UseSplitVerifier'

    jacoco.excludes = ["*Test*"]
}

sourceSets {
    test {
        resources {
            srcDir 'src/test/java'
            include '**/*.Plugin'
            include '**/*.rst'
            include '**/*.json'
            include '**/*.sql'
            include '**/*.html'
            include '**/*.jsonp'
        }
    }
    benchmarks {
        java {
            srcDir 'src/benchmarks/java'
            compileClasspath += main.output + test.output + configurations.benchmarksCompile
            runtimeClasspath += main.output + test.output + configurations.benchmarksRuntime
        }
    }
    shared {
        java {
            srcDir "src/main/java/"
            include "io/crate/action/sql/SQL*"
        }
    }
}

task benchmarks(type: Test) {
    description = "Run internal benchmarks"

    testClassesDir = project.sourceSets.benchmarks.output.classesDir
    classpath = project.sourceSets.benchmarks.runtimeClasspath

    jacoco {
        enabled = false
    }
}

idea {
    module {
        testSourceDirs += file('src/benchmarks/java')
        // put additional dependencies on the classpath
        scopes.TEST.plus += [configurations.benchmarksCompile]
        scopes.TEST.plus += [configurations.benchmarksRuntime]
    }
}