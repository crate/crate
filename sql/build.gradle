apply from: "$rootDir/gradle/javaModule.gradle"

archivesBaseName = 'crate-sql'

configurations {
    // export of test so that other modules can use the utilities there as well.
    testOutput
}

dependencies {
    compile project(':shared')
    compile project(':common')
    implementation project(':http')
    implementation project(':es:es-server')
    implementation project(':es:es-transport')
    compile project(':dex')
    compile project(':blob')
    compile project(':sql-parser')
    compile project(':pgwire')
    compile project(':udc')
    compile project(':ssl')
    compile "com.tdunning:t-digest:3.2"
    compile "org.hdrhistogram:HdrHistogram:2.1.9"
    implementation "io.netty:netty-codec-http:${versions.netty4}"
    compile "io.netty:netty-transport:${versions.netty4}"
    compile "io.netty:netty-codec:${versions.netty4}"
    compile "io.netty:netty-buffer:${versions.netty4}"
    compile "com.google.guava:guava:${versions.guava}"
    compile "com.amazonaws:aws-java-sdk-s3:${versions.aws}"
    compile "org.apache.commons:commons-math3:${versions.commonsmath}"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${versions.jackson}"
    compile "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
    // Needed by aws-java-sdk-s3 in Java 9
    compile "javax.xml.bind:jaxb-api:${versions.jaxb_api}"

    testCompile project(':integration-testing')
    testCompile project(path: ':dex', configuration: 'testOutput')
    testCompile 'org.skyscreamer:jsonassert:1.3.0'
    testCompile "org.hamcrest:hamcrest:${versions.hamcrest}"
    testCompile "org.slf4j:slf4j-api:${versions.slf4j}"
    testCompile "org.postgresql:postgresql:${versions.jdbc}"
    testCompile 'com.pholser:junit-quickcheck-core:0.9'
    testCompile 'com.pholser:junit-quickcheck-generators:0.9'
    // These plugins are dynamically loaded and need to be present here.
    // They are required by 1) tests in :sql 2) modules depending on :sql.
    // They also need to be added in :app because :sql is declared non-transitive
    // in :app (=dependencies of :sql won't be included).
    compile project(":es:es-repository-url")
    compile project(":es:es-repository-s3")
    compile project(":es:es-repository-azure")
    compile project(":es:es-analysis-common")
}
//noinspection GroovyAssignabilityCheck
task testOutputJar (type: Jar) {
    classifier = 'sql-testing'
    from sourceSets.test.output
}

artifacts {
    testOutput testOutputJar
}

test {
    outputs.dir("$projectDir/data")

    jacoco.excludes = ["*Test*"]

    // make sure sources are first on classpath because we do override some class(es) (currently: lucene's AssertingLeafReader)
    classpath = sourceSets.main.output + sourceSets.test.output + configurations.testCompile
}

clean.dependsOn('cleanTest')
