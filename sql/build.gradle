
apply plugin: 'java'

// we do not want to have elasticsearch here, since we provide it in :es
configurations {
    all*.exclude group: 'org.elasticsearch'
}

evaluationDependsOn(':app')


dependencies {
    compile project(':es')
    testCompile 'org.skyscreamer:jsonassert:1.2.0'
    testCompile 'com.carrotsearch:junit-benchmarks:0.7.0'
    testCompile 'com.h2database:h2:1.3.173'
    testCompile project(':testing')
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.java.dev.javacc:javacc:5.0'
    }
}

test {
    testLogging {
        // show standard out and standard error of the test JVM(s) on the console
        showStandardStreams = true
        // Show that tests are run in the command-line output
        events 'started', 'passed'
    }
    // force run, see: http://gradle.1045684.n5.nabble.com/how-does-gradle-decide-when-to-run-tests-td3314172.html
    outputs.upToDateWhen { false }
}

task compileJavaCC {
    def javaccPath = project.file('src/main/javacc')
    def javaccTree = fileTree(dir: javaccPath, include: '**/*.jj')

    def outputFiles = []
    javaccTree.each {File file ->
        def outPath = file.parentFile.absolutePath.replace('javacc/', 'java/')
        outputFiles.add(outPath)
    }

    inputs.files javaccTree
    outputs.files outputFiles

    doLast {
        javaccTree.each {File file ->
            def outPath = file.parentFile.absolutePath.replace('javacc/', 'java/')
            String[] args = ["-STATIC=false","-OUTPUT_DIRECTORY:$outPath", "$file"]
            org.javacc.parser.Main.mainProgram(args)
        }
    }
}

// Properties for JUnit-Benchmarks
tasks.withType(Test) {
    systemProperty 'jub.consumers', 'CONSOLE,H2,XML'
    systemProperty 'jub.db.file', '/tmp/crate-junit-benchmarks/results'
    systemProperty 'jub.xml.file', '/tmp/crate-junit-benchmarks/results.xml'
    systemProperty 'jub.charts.dir', '/tmp/crate-junit-benchmarks'
}

compileJava.dependsOn compileJavaCC

sourceSets {
    test {
        resources {
            srcDir 'src/test/java'
            include '**/*.rst'
            include '**/*.json'
        }
    }
}
