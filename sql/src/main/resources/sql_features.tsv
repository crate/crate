B011	Embedded Ada			NO		
B012	Embedded C			NO		
B013	Embedded COBOL			NO		
B014	Embedded Fortran			NO		
B015	Embedded MUMPS			NO		
B016	Embedded Pascal			NO		
B017	Embedded PL/I			NO		
B021	Direct SQL			NO		
B031	Basic dynamic SQL			NO		
B032	Extended dynamic SQL			NO		
B032	Extended dynamic SQL	1	<describe input statement>	NO		
B033	Untyped SQL-invoked function arguments			NO		
B034	Dynamic specification of cursor attributes			NO		
B035	Non-extended descriptor names			NO		
B041	Extensions to embedded SQL exception declarations			NO		
B051	Enhanced execution rights			NO		
B111	Module language Ada			NO		
B112	Module language C			NO		
B113	Module language COBOL			NO		
B114	Module language Fortran			NO		
B115	Module language MUMPS			NO		
B116	Module language Pascal			NO		
B117	Module language PL/I			NO		
B121	Routine language Ada			NO		
B122	Routine language C			NO		
B123	Routine language COBOL			NO		
B124	Routine language Fortran			NO		
B125	Routine language MUMPS			NO		
B126	Routine language Pascal			NO		
B127	Routine language PL/I			NO		
B128	Routine language SQL			NO		
B211	Module language Ada: VARCHAR and NUMERIC support			NO		
B221	Routine language Ada: VARCHAR and NUMERIC support			NO		
E011	Numeric data types			NO		Only Java types are supported
E011	Numeric data types	1	INTEGER and SMALLINT data types	NO		missing smallint
E011	Numeric data types	2	REAL, DOUBLE PRECISION, and FLOAT data types	NO		missing real, double precission
E011	Numeric data types	3	DECIMAL and NUMERIC data types	NO		
E011	Numeric data types	4	Arithmetic operators	YES		
E011	Numeric data types	5	Numeric comparison	YES		
E011	Numeric data types	6	Implicit casting among the numeric data types	YES		
E021	Character data types			NO		Type 'string'
E021	Character string types	1	CHARACTER data type	NO		
E021	Character string types	2	CHARACTER VARYING data type	NO		
E021	Character string types	3	Character literals	YES		Only simple ' quoting
E021	Character string types	4	CHARACTER_LENGTH function	YES		char_length only
E021	Character string types	5	OCTET_LENGTH function	YES		
E021	Character string types	6	SUBSTRING function	NO		substr scalar
E021	Character string types	7	Character concatenation	YES		
E021	Character string types	8	UPPER and LOWER functions	YES		
E021	Character string types	9	TRIM function	NO		
E021	Character string types	10	Implicit casting among the character string types	-		just one type
E021	Character string types	11	POSITION function	NO		
E021	Character string types	12	Character comparison	YES		
E031	Identifiers			YES		
E031	Identifiers	1	Delimited identifiers	YES		
E031	Identifiers	2	Lower case identifiers	YES		
E031	Identifiers	3	Trailing underscore	YES		
E051	Basic query specification			NO		
E051	Basic query specification	1	SELECT DISTINCT	YES		
E051	Basic query specification	2	GROUP BY clause	YES		
E051	Basic query specification	4	GROUP BY can contain columns not in <select list>	YES		
E051	Basic query specification	5	Select list items can be renamed	YES		
E051	Basic query specification	6	HAVING clause	YES		
E051	Basic query specification	7	Qualified * in select list	YES		
E051	Basic query specification	8	Correlation names in the FROM clause	YES		
E051	Basic query specification	9	Rename columns in the FROM clause	NO		
E061	Basic predicates and search conditions			NO		
E061	Basic predicates and search conditions	1	Comparison predicate	YES		
E061	Basic predicates and search conditions	2	BETWEEN predicate	YES		
E061	Basic predicates and search conditions	3	IN predicate with list of values	YES		
E061	Basic predicates and search conditions	4	LIKE predicate	YES		
E061	Basic predicates and search conditions	5	LIKE predicate ESCAPE clause	NO		
E061	Basic predicates and search conditions	6	NULL predicate	YES		
E061	Basic predicates and search conditions	7	Quantified comparison predicate	NO		only ANY(array) 
E061	Basic predicates and search conditions	8	EXISTS predicate	NO		
E061	Basic predicates and search conditions	9	Subqueries in comparison predicate	NO		
E061	Basic predicates and search conditions	11	Subqueries in IN predicate	NO		
E061	Basic predicates and search conditions	12	Subqueries in quantified comparison predicate	NO		
E061	Basic predicates and search conditions	13	Correlated subqueries	NO		
E061	Basic predicates and search conditions	14	Search condition	YES		
E071	Basic query expressions			NO		
E071	Basic query expressions	1	UNION DISTINCT table operator	NO		
E071	Basic query expressions	2	UNION ALL table operator	YES		
E071	Basic query expressions	3	EXCEPT DISTINCT table operator	NO		
E071	Basic query expressions	5	Columns combined via table operators need not have exactly the same data type	NO		
E071	Basic query expressions	6	Table operators in subqueries	NO		
E081	Basic Privileges			YES		
E081	Basic Privileges	1	SELECT privilege	YES		
E081	Basic Privileges	2	DELETE privilege	YES		
E081	Basic Privileges	3	INSERT privilege at the table level	NO		
E081	Basic Privileges	4	UPDATE privilege at the table level	NO		
E081	Basic Privileges	5	UPDATE privilege at the column level	NO		
E081	Basic Privileges	6	REFERENCES privilege at the table level	NO		
E081	Basic Privileges	7	REFERENCES privilege at the column level	NO		
E081	Basic Privileges	8	WITH GRANT OPTION	NO		
E081	Basic Privileges	9	USAGE privilege	NO		
E081	Basic Privileges	10	EXECUTE privilege	NO		
E091	Set functions			NO		
E091	Set functions	1	AVG	YES		
E091	Set functions	2	COUNT	YES		
E091	Set functions	3	MAX	YES		
E091	Set functions	4	MIN	YES		
E091	Set functions	5	SUM	YES		
E091	Set functions	6	ALL quantifier	NO		
E091	Set functions	7	DISTINCT quantifier	YES		
E101	Basic data manipulation			YES		
E101	Basic data manipulation	1	INSERT statement	YES		
E101	Basic data manipulation	3	Searched UPDATE statement	YES		
E101	Basic data manipulation	4	Searched DELETE statement	YES		
E111	Single row SELECT statement			NO		
E121	Basic cursor support			NO		
E121	Basic cursor support	1	DECLARE CURSOR	NO		
E121	Basic cursor support	2	ORDER BY columns need not be in select list	NO		
E121	Basic cursor support	3	Value expressions in ORDER BY clause	NO		
E121	Basic cursor support	4	OPEN statement	NO		
E121	Basic cursor support	6	Positioned UPDATE statement	NO		
E121	Basic cursor support	7	Positioned DELETE statement	NO		
E121	Basic cursor support	8	CLOSE statement	NO		
E121	Basic cursor support	10	FETCH statement implicit NEXT	NO		
E121	Basic cursor support	17	WITH HOLD cursors	NO		
E131	Null value support (nulls in lieu of values)			YES		
E141	Basic integrity constraints			NO		
E141	Basic integrity constraints	1	NOT NULL constraints	YES		
E141	Basic integrity constraints	2	UNIQUE constraints of NOT NULL columns	NO		
E141	Basic integrity constraints	3	PRIMARY KEY constraints	YES		
E141	Basic integrity constraints	4	Basic FOREIGN KEY constraint with the NO ACTION default for both referential delete action and referential update action	NO		
E141	Basic integrity constraints	6	CHECK constraints	NO		
E141	Basic integrity constraints	7	Column defaults	NO		
E141	Basic integrity constraints	8	NOT NULL inferred on PRIMARY KEY	YES		
E141	Basic integrity constraints	10	Names in a foreign key can be specified in any order	NO		
E151	Transaction support			NO		
E151	Transaction support	1	COMMIT statement	NO		
E151	Transaction support	2	ROLLBACK statement	NO		
E152	Basic SET TRANSACTION statement			NO		
E152	Basic SET TRANSACTION statement	1	SET TRANSACTION statement: ISOLATION LEVEL SERIALIZABLE clause	NO		
E152	Basic SET TRANSACTION statement	2	SET TRANSACTION statement: READ ONLY and READ WRITE clauses	NO		
E153	Updatable queries with subqueries			NO		
E161	SQL comments using leading double minus			YES		
E171	SQLSTATE support			NO		
E182	Module language			NO		
F021	Basic information schema			NO		
F021	Basic information schema	1	COLUMNS view	YES		
F021	Basic information schema	2	TABLES view	YES		
F021	Basic information schema	3	VIEWS view	NO		
F021	Basic information schema	4	TABLE_CONSTRAINTS view	YES		
F021	Basic information schema	5	REFERENTIAL_CONSTRAINTS view	-		
F021	Basic information schema	6	CHECK_CONSTRAINTS view	-		
F031	Basic schema manipulation			NO		
F031	Basic schema manipulation	1	CREATE TABLE statement to create persistent base tables	YES		
F031	Basic schema manipulation	2	CREATE VIEW statement	NO		
F031	Basic schema manipulation	3	GRANT statement	NO		
F031	Basic schema manipulation	4	ALTER TABLE statement: ADD COLUMN clause	YES		
F031	Basic schema manipulation	13	DROP TABLE statement: RESTRICT clause	NO		
F031	Basic schema manipulation	16	DROP VIEW statement: RESTRICT clause	NO		
F031	Basic schema manipulation	19	REVOKE statement: RESTRICT clause	NO		
F032	CASCADE drop behavior			NO		
F033	ALTER TABLE statement: DROP COLUMN clause			NO		
F034	Extended REVOKE statement			YES		
F034	Extended REVOKE statement	1	REVOKE statement performed by other than the owner of a schema object	YES		
F034	Extended REVOKE statement	2	REVOKE statement: GRANT OPTION FOR clause	NO		
F034	Extended REVOKE statement	3	REVOKE statement to revoke a privilege that the grantee has WITH GRANT OPTION	NO		
F041	Basic joined table			NO		
F041	Basic joined table	1	Inner join (but not necessarily the INNER keyword)	YES		
F041	Basic joined table	2	INNER keyword	YES		
F041	Basic joined table	3	LEFT OUTER JOIN	YES		
F041	Basic joined table	4	RIGHT OUTER JOIN	YES		
F041	Basic joined table	5	Outer joins can be nested	YES		
F041	Basic joined table	7	The inner table in a left or right outer join can also be used in an inner join	YES		
F041	Basic joined table	8	All comparison operators are supported (rather than just =)	YES		
F051	Basic date and time			NO		only timestamp type
F051	Basic date and time	1	DATE data type (including support of DATE literal)	NO		
F051	Basic date and time	2	TIME data type (including support of TIME literal) with fractional seconds precision of at least 0	NO		
F051	Basic date and time	3	TIMESTAMP data type (including support of TIMESTAMP literal) with fractional seconds precision of at least 0 and 6	YES		
F051	Basic date and time	4	Comparison predicate on DATE, TIME, and TIMESTAMP data types	YES		
F051	Basic date and time	5	Explicit CAST between datetime types and character string types	YES		
F051	Basic date and time	6	CURRENT_DATE	NO		current_timestamp
F051	Basic date and time	7	LOCALTIME	NO		
F051	Basic date and time	8	LOCALTIMESTAMP	NO		
F052	Intervals and datetime arithmetic			NO		
F053	OVERLAPS predicate			NO		
F054	TIMESTAMP in DATE type precedence list			NO		
F081	UNION and EXCEPT in views			NO		
F111	Isolation levels other than SERIALIZABLE			-		
F531	Temporary tables			NO		
F111	Isolation levels other than SERIALIZABLE	1	READ UNCOMMITTED isolation level	NO		
F111	Isolation levels other than SERIALIZABLE	2	READ COMMITTED isolation level	NO		
F111	Isolation levels other than SERIALIZABLE	3	REPEATABLE READ isolation level	NO		
F121	Basic diagnostics management			NO		
F121	Basic diagnostics management	1	GET DIAGNOSTICS statement	NO		
F121	Basic diagnostics management	2	SET TRANSACTION statement: DIAGNOSTICS SIZE clause	NO		
F122	Enhanced diagnostics management			NO		
F123	All diagnostics			NO		
F131	Grouped operations			NO		
F131	Grouped operations	1	WHERE, GROUP BY, and HAVING clauses supported in queries with grouped views	YES		
F131	Grouped operations	2	Multiple tables supported in queries with grouped views	NO		
F131	Grouped operations	3	Set functions supported in queries with grouped views	YES		
F131	Grouped operations	4	Subqueries with GROUP BY and HAVING clauses and grouped views	NO		
F131	Grouped operations	5	Single row SELECT with GROUP BY and HAVING clauses and grouped views	NO		
F171	Multiple schemas per user			YES		
F181	Multiple module support			NO		
F191	Referential delete actions			NO		
F200	TRUNCATE TABLE statement			NO		
F201	CAST function			YES		
F202	TRUNCATE TABLE: identity column restart option			NO		
F221	Explicit defaults			NO		
F222	INSERT statement: DEFAULT VALUES clause			NO		
F231	Privilege tables			NO		
F231	Privilege tables	1	TABLE_PRIVILEGES view	NO		
F231	Privilege tables	2	COLUMN_PRIVILEGES view	NO		
F231	Privilege tables	3	USAGE_PRIVILEGES view	NO		
F251	Domain support			NO		
F261	CASE expression			YES		
F261	CASE expression	1	Simple CASE	YES		
F261	CASE expression	2	Searched CASE	YES		
F261	CASE expression	3	NULLIF	YES		
F261	CASE expression	4	COALESCE	YES		
F262	Extended CASE expression			YES		
F263	Comma-separated predicates in simple CASE expression			NO		
F271	Compound character literals			NO		
F281	LIKE enhancements			NO		
F291	UNIQUE predicate			NO		
F301	CORRESPONDING in query expressions			NO		
F302	INTERSECT table operator			NO		
F302	INTERSECT table operator	1	INTERSECT DISTINCT table operator	NO		
F302	INTERSECT table operator	2	INTERSECT ALL table operator	NO		
F304	EXCEPT ALL table operator			NO		
F311	Schema definition statement			NO		
F311	Schema definition statement	1	CREATE SCHEMA	NO		will be explicitly defined with table
F311	Schema definition statement	2	CREATE TABLE for persistent base tables	YES		
F311	Schema definition statement	3	CREATE VIEW	NO		
F311	Schema definition statement	4	CREATE VIEW: WITH CHECK OPTION	NO		
F311	Schema definition statement	5	GRANT statement	NO		
F312	MERGE statement			NO		
F313	Enhanced MERGE statement			NO		
F314	MERGE statement with DELETE branch			NO		
F321	User authorization			NO		
F341	Usage tables			NO		
F361	Subprogram support			NO		
F381	Extended schema manipulation			NO		
F381	Extended schema manipulation	1	ALTER TABLE statement: ALTER COLUMN clause	NO		
F381	Extended schema manipulation	2	ALTER TABLE statement: ADD CONSTRAINT clause	NO		
F381	Extended schema manipulation	3	ALTER TABLE statement: DROP CONSTRAINT clause	NO		
F382	Alter column data type			NO		
F383	Set column not null clause			NO		
F384	Drop identity property clause			NO		
F385	Drop column generation expression clause			NO		
F386	Set identity column generation clause			NO		
F391	Long identifiers			YES		
F392	Unicode escapes in identifiers			NO		
F393	Unicode escapes in literals			NO		
F394	Optional normal form specification			NO		
F401	Extended joined table			NO		
F401	Extended joined table	1	NATURAL JOIN	NO		
F401	Extended joined table	2	FULL OUTER JOIN	YES		
F401	Extended joined table	4	CROSS JOIN	YES		
F402	Named column joins for LOBs, arrays, and multisets			NO		
F403	Partitioned joined tables			NO		
F411	Time zone specification			NO		
F421	National character			NO		
F431	Read-only scrollable cursors			NO		
F431	Read-only scrollable cursors	1	FETCH with explicit NEXT	NO		
F431	Read-only scrollable cursors	2	FETCH FIRST	NO		
F431	Read-only scrollable cursors	3	FETCH LAST	NO		
F431	Read-only scrollable cursors	4	FETCH PRIOR	NO		
F431	Read-only scrollable cursors	5	FETCH ABSOLUTE	NO		
F431	Read-only scrollable cursors	6	FETCH RELATIVE	NO		
F441	Extended set function support			NO		
F442	Mixed column references in set functions			NO		
F451	Character set definition			NO		
F461	Named character sets			NO		
F471	Scalar subquery values			NO		
F481	Expanded NULL predicate			YES		
F491	Constraint management			NO		
F492	Optional table constraint enforcement			NO		
F501	Features and conformance views			NO		
F501	Features and conformance views	1	SQL_FEATURES view	YES		
F501	Features and conformance views	2	SQL_SIZING view	NO		
F501	Features and conformance views	3	SQL_LANGUAGES view	NO		
F502	Enhanced documentation tables			NO		
F502	Enhanced documentation tables	1	SQL_SIZING_PROFILES view	NO		
F502	Enhanced documentation tables	2	SQL_IMPLEMENTATION_INFO view	NO		
F502	Enhanced documentation tables	3	SQL_PACKAGES view	NO		
F521	Assertions			NO		
F555	Enhanced seconds precision			NO		
F561	Full value expressions			NO		
F571	Truth value tests			YES		
F591	Derived tables			NO		
F611	Indicator data types			NO		
F641	Row and table constructors			NO		
F651	Catalog name qualifiers			NO		
F661	Simple tables			NO		
F671	Subqueries in CHECK			NO		
F672	Retrospective check constraints			NO		
F690	Collation support			NO		
F692	Extended collation support			NO		
F693	SQL-session and client module collations			NO		
F695	Translation support			NO		
F696	Additional translation documentation			NO		
F701	Referential update actions			NO		
F711	ALTER domain			NO		
F721	Deferrable constraints			NO		
F731	INSERT column privileges			NO		
F741	Referential MATCH types			NO		
F751	View CHECK enhancements			NO		
F761	Session management			NO		
F762	CURRENT_CATALOG			NO		
F763	CURRENT_SCHEMA			NO		
F771	Connection management			NO		crash shell only
F781	Self-referencing operations			NO		
F791	Insensitive cursors			NO		
F801	Full set function			NO		
F812	Basic flagging			NO		
F813	Extended flagging			NO		
F821	Local table references			NO		
F831	Full cursor update			NO		
F831	Full cursor update	1	Updatable scrollable cursors	NO		
F831	Full cursor update	2	Updatable ordered cursors	NO		
F841	LIKE_REGEX predicate			NO		
F842	OCCURENCES_REGEX function			NO		
F843	POSITION_REGEX function			NO		
F844	SUBSTRING_REGEX function			NO		
F845	TRANSLATE_REGEX function			NO		
F846	Octet support in regular expression operators			NO		
F847	Nonconstant regular expressions			NO		
F850	Top-level <order by clause> in <query expression>			YES		
F851	<order by clause> in subqueries			NO		
F852	Top-level <order by clause> in views			NO		
F855	Nested <order by clause> in <query expression>			YES		
F856	Nested <fetch first clause> in <query expression>			NO		
F857	Top-level <fetch first clause> in <query expression>			NO		
F858	<fetch first clause> in subqueries			NO		
F859	Top-level <fetch first clause> in views			NO		
F860	<fetch first row count> in <fetch first clause>			NO		
F861	Top-level <result offset clause> in <query expression>			NO		
F862	<result offset clause> in subqueries			NO		
F863	Nested <result offset clause> in <query expression>			NO		
F864	Top-level <result offset clause> in views			NO		
F865	<offset row count> in <result offset clause>			NO		
F866	FETCH FIRST clause: PERCENT option			NO		
F867	FETCH FIRST clause: WITH TIES option			NO		
S011	Distinct data types			NO		
S011	Distinct data types	1	USER_DEFINED_TYPES view	NO		
S023	Basic structured types			NO		
S024	Enhanced structured types			NO		
S025	Final structured types			NO		
S026	Self-referencing structured types			NO		
S027	Create method by specific method name			NO		
S028	Permutable UDT options list			NO		
S041	Basic reference types			NO		
S043	Enhanced reference types			NO		
S051	Create table of type			NO		
S071	SQL paths in function and type name resolution			NO		
S081	Subtables			NO		
S091	Basic array support			NO		special syntax
S091	Basic array support	1	Arrays of built-in data types	NO		
S091	Basic array support	2	Arrays of distinct types	NO		
S091	Basic array support	3	Array expressions	NO		
S092	Arrays of user-defined types			NO		
S094	Arrays of reference types			NO		
S095	Array constructors by query			NO		
S096	Optional array bounds			NO		
S097	Array element assignment			NO		
S098	ARRAY_AGG			NO		
S111	ONLY in query expressions			NO		
S151	Type predicate			NO		
S161	Subtype treatment			NO		
S162	Subtype treatment for references			NO		
S201	SQL-invoked routines on arrays			NO		
S201	SQL-invoked routines on arrays	1	Array parameters	NO		
S201	SQL-invoked routines on arrays	2	Array as result type of functions	NO		
S202	SQL-invoked routines on multisets			NO		
S211	User-defined cast functions			NO		
S231	Structured type locators			NO		
S232	Array locators			NO		
S233	Multiset locators			NO		
S241	Transform functions			NO		
S242	Alter transform statement			NO		
S251	User-defined orderings			NO		
S261	Specific type method			NO		
S271	Basic multiset support			NO		
S272	Multisets of user-defined types			NO		
S274	Multisets of reference types			NO		
S275	Advanced multiset support			NO		
S281	Nested collection types			NO		
S291	Unique constraint on entire row			NO		
S301	Enhanced UNNEST			NO		
S401	Distinct types based on array types			NO		
S402	Distinct types based on distinct types			NO		
S403	ARRAY_MAX_CARDINALITY			NO		
S404	TRIM_ARRAY			NO		
T011	Timestamp in Information Schema			NO		
T021	BINARY and VARBINARY data types			NO		
T022	Advanced support for BINARY and VARBINARY data types			NO		
T023	Compound binary literal			NO		
T024	Spaces in binary literals			NO		
T031	BOOLEAN data type			YES		
T041	Basic LOB data type support			NO		see BLOB handling
T041	Basic LOB data type support	1	BLOB data type	NO		
T041	Basic LOB data type support	2	CLOB data type	NO		
T041	Basic LOB data type support	3	POSITION, LENGTH, LOWER, TRIM, UPPER, and SUBSTRING functions for LOB data types	NO		
T041	Basic LOB data type support	4	Concatenation of LOB data types	NO		
T041	Basic LOB data type support	5	LOB locator: non-holdable	NO		
T042	Extended LOB data type support			NO		
T043	Multiplier T			NO		
T044	Multiplier P			NO		
T051	Row types			NO		
T052	MAX and MIN for row types			NO		
T053	Explicit aliases for all-fields reference			NO		
T061	UCS support			NO		
T071	BIGINT data type			NO		see LONG
T101	Enhanced nullability determination			NO		
T111	Updatable joins, unions, and columns			NO		
T121	WITH (excluding RECURSIVE) in query expression			NO		
T122	WITH (excluding RECURSIVE) in subquery			NO		
T131	Recursive query			NO		
T132	Recursive query in subquery			NO		
T141	SIMILAR predicate			NO		
T151	DISTINCT predicate			NO		
T152	DISTINCT predicate with negation			NO		
T171	LIKE clause in table definition			NO		
T172	AS subquery clause in table definition			NO		
T173	Extended LIKE clause in table definition			NO		
T174	Identity columns			NO		
T175	Generated columns			YES		
T176	Sequence generator support			NO		
T177	Sequence generator support: simple restart option			NO		
T178	Identity columns:  simple restart option			NO		
T180	System-versioned tables			NO		
T181	Application-time period tables			NO		
T191	Referential action RESTRICT			NO		
T201	Comparable data types for referential constraints			NO		
T211	Basic trigger capability			NO		
T211	Basic trigger capability	1	Triggers activated on UPDATE, INSERT, or DELETE of one base table	NO		
T211	Basic trigger capability	2	BEFORE triggers	NO		
T211	Basic trigger capability	3	AFTER triggers	NO		
T211	Basic trigger capability	4	FOR EACH ROW triggers	NO		
T211	Basic trigger capability	5	Ability to specify a search condition that must be true before the trigger is invoked	NO		
T211	Basic trigger capability	6	Support for run-time rules for the interaction of triggers and constraints	NO		
T211	Basic trigger capability	7	TRIGGER privilege	NO		
T211	Basic trigger capability	8	Multiple triggers for the same event are executed in the order in which they were created in the catalog	NO		
T212	Enhanced trigger capability			NO		
T213	INSTEAD OF triggers			NO		
T231	Sensitive cursors			NO		
T241	START TRANSACTION statement			NO		
T251	SET TRANSACTION statement: LOCAL option			NO		
T261	Chained transactions			NO		
T271	Savepoints			NO		
T272	Enhanced savepoint management			NO		
T281	SELECT privilege with column granularity			NO		
T285	Enhanced derived column names			NO		
T301	Functional dependencies			NO		
T312	OVERLAY function			NO		
T321	Basic SQL-invoked routines			NO		
T321	Basic SQL-invoked routines	1	User-defined functions with no overloading	YES		
T321	Basic SQL-invoked routines	2	User-defined stored procedures with no overloading	NO		
T321	Basic SQL-invoked routines	3	Function invocation	YES		
T321	Basic SQL-invoked routines	4	CALL statement	NO		
T321	Basic SQL-invoked routines	5	RETURN statement	NO		
T321	Basic SQL-invoked routines	6	ROUTINES view	YES		
T321	Basic SQL-invoked routines	7	PARAMETERS view	NO		
T322	Declared data type attributes			NO		
T323	Explicit security for external routines			NO		
T324	Explicit security for SQL routines			NO		
T325	Qualified SQL parameter references			NO		
T326	Table functions			NO		
T331	Basic roles			NO		
T332	Extended roles			NO		
T341	Overloading of SQL-invoked functions and procedures			NO		
T351	Bracketed SQL comments (/*...*/ comments)			NO		
T431	Extended grouping capabilities			NO		
T432	Nested and concatenated GROUPING SETS			NO		
T433	Multiargument GROUPING function			NO		
T434	GROUP BY DISTINCT			NO		
T441	ABS and MOD functions			NO		mod is missing
T461	Symmetric BETWEEN predicate			NO		
T471	Result sets return value			NO		
T472	DESCRIBE CURSOR			NO		
T491	LATERAL derived table			NO		
T495	Combined data change and retrieval			NO		
T501	Enhanced EXISTS predicate			NO		
T502	Period predicates			NO		
T511	Transaction counts			NO		
T521	Named arguments in CALL statement			NO		
T522	Default values for IN parameters of SQL-invoked procedures			NO		
T541	Updatable table references			NO		
T551	Optional key words for default syntax			NO		
T561	Holdable locators			NO		
T571	Array-returning external SQL-invoked functions			NO		
T572	Multiset-returning external SQL-invoked functions			NO		
T581	Regular expression substring function			NO		
T591	UNIQUE constraints of possibly null columns			NO		
T601	Local cursor references			NO		
T611	Elementary OLAP operations			NO		
T612	Advanced OLAP operations			NO		
T613	Sampling			NO		
T614	NTILE function			NO		
T615	LEAD and LAG functions			NO		
T616	Null treatment option for LEAD and LAG functions			NO		
T617	FIRST_VALUE and LAST_VALUE function			NO		
T618	NTH_VALUE function			NO		
T619	Nested window functions			NO		
T620	WINDOW clause: GROUPS option			NO		
T621	Enhanced numeric functions			NO		missing: exp, power
T631	IN predicate with one list element			YES		
T641	Multiple column assignment			NO		
T651	SQL-schema statements in SQL routines			NO		
T652	SQL-dynamic statements in SQL routines			NO		
T653	SQL-schema statements in external routines			NO		
T654	SQL-dynamic statements in external routines			NO		
T655	Cyclically dependent routines			NO		
M001	Datalinks			NO		
M002	Datalinks via SQL/CLI			NO		
M003	Datalinks via Embedded SQL			NO		
M004	Foreign data support			NO		
M005	Foreign schema support			NO		
M006	GetSQLString routine			NO		
M007	TransmitRequest			NO		
M009	GetOpts and GetStatistics routines			NO		
M010	Foreign data wrapper support			NO		
M011	Datalinks via Ada			NO		
M012	Datalinks via C			NO		
M013	Datalinks via COBOL			NO		
M014	Datalinks via Fortran			NO		
M015	Datalinks via M			NO		
M016	Datalinks via Pascal			NO		
M017	Datalinks via PL/I			NO		
M018	Foreign data wrapper interface routines in Ada			NO		
M019	Foreign data wrapper interface routines in C			NO		
M020	Foreign data wrapper interface routines in COBOL			NO		
M021	Foreign data wrapper interface routines in Fortran			NO		
M022	Foreign data wrapper interface routines in MUMPS			NO		
M023	Foreign data wrapper interface routines in Pascal			NO		
M024	Foreign data wrapper interface routines in PL/I			NO		
M030	SQL-server foreign data support			NO		
M031	Foreign data wrapper general routines			NO		
X010	XML type			NO		
X011	Arrays of XML type			NO		
X012	Multisets of XML type			NO		
X013	Distinct types of XML type			NO		
X014	Attributes of XML type			NO		
X015	Fields of XML type			NO		
X016	Persistent XML values			NO		
X020	XMLConcat			NO		
X025	XMLCast			NO		
X030	XMLDocument			NO		
X031	XMLElement			NO		
X032	XMLForest			NO		
X034	XMLAgg			NO		
X035	XMLAgg: ORDER BY option			NO		
X036	XMLComment			NO		
X037	XMLPI			NO		
X038	XMLText			NO		
X040	Basic table mapping			NO		
X041	Basic table mapping: nulls absent			NO		
X042	Basic table mapping: null as nil			NO		
X043	Basic table mapping: table as forest			NO		
X044	Basic table mapping: table as element			NO		
X045	Basic table mapping: with target namespace			NO		
X046	Basic table mapping: data mapping			NO		
X047	Basic table mapping: metadata mapping			NO		
X048	Basic table mapping: base64 encoding of binary strings			NO		
X049	Basic table mapping: hex encoding of binary strings			NO		
X050	Advanced table mapping			NO		
X051	Advanced table mapping: nulls absent			NO		
X052	Advanced table mapping: null as nil			NO		
X053	Advanced table mapping: table as forest			NO		
X054	Advanced table mapping: table as element			NO		
X055	Advanced table mapping: target namespace			NO		
X056	Advanced table mapping: data mapping			NO		
X057	Advanced table mapping: metadata mapping			NO		
X058	Advanced table mapping: base64 encoding of binary strings			NO		
X059	Advanced table mapping: hex encoding of binary strings			NO		
X060	XMLParse: Character string input and CONTENT option			NO		
X061	XMLParse: Character string input and DOCUMENT option			NO		
X065	XMLParse: BLOB input and CONTENT option			NO		
X066	XMLParse: BLOB input and DOCUMENT option			NO		
X068	XMLSerialize: BOM			NO		
X069	XMLSerialize: INDENT			NO		
X070	XMLSerialize: Character string serialization and CONTENT option			NO		
X071	XMLSerialize: Character string serialization and DOCUMENT option			NO		
X072	XMLSerialize: Character string serialization			NO		
X073	XMLSerialize: BLOB serialization and CONTENT option			NO		
X074	XMLSerialize: BLOB serialization and DOCUMENT option			NO		
X075	XMLSerialize: BLOB serialization			NO		
X076	XMLSerialize: VERSION			NO		
X077	XMLSerialize: explicit ENCODING option			NO		
X078	XMLSerialize: explicit XML declaration			NO		
X080	Namespaces in XML publishing			NO		
X081	Query-level XML namespace declarations			NO		
X082	XML namespace declarations in DML			NO		
X083	XML namespace declarations in DDL			NO		
X084	XML namespace declarations in compound statements			NO		
X085	Predefined namespace prefixes			NO		
X086	XML namespace declarations in XMLTable			NO		
X090	XML document predicate			NO		
X091	XML content predicate			NO		
X096	XMLExists			NO		
X100	Host language support for XML: CONTENT option			NO		
X101	Host language support for XML: DOCUMENT option			NO		
X110	Host language support for XML: VARCHAR mapping			NO		
X111	Host language support for XML: CLOB mapping			NO		
X112	Host language support for XML: BLOB mapping			NO		
X113	Host language support for XML: STRIP WHITESPACE option			NO		
X114	Host language support for XML: PRESERVE WHITESPACE option			NO		
X120	XML parameters in SQL routines			NO		
X121	XML parameters in external routines			NO		
X131	Query-level XMLBINARY clause			NO		
X132	XMLBINARY clause in DML			NO		
X133	XMLBINARY clause in DDL			NO		
X134	XMLBINARY clause in compound statements			NO		
X135	XMLBINARY clause in subqueries			NO		
X141	IS VALID predicate: data-driven case			NO		
X142	IS VALID predicate: ACCORDING TO clause			NO		
X143	IS VALID predicate: ELEMENT clause			NO		
X144	IS VALID predicate: schema location			NO		
X145	IS VALID predicate outside check constraints			NO		
X151	IS VALID predicate with DOCUMENT option			NO		
X152	IS VALID predicate with CONTENT option			NO		
X153	IS VALID predicate with SEQUENCE option			NO		
X155	IS VALID predicate: NAMESPACE without ELEMENT clause			NO		
X157	IS VALID predicate: NO NAMESPACE with ELEMENT clause			NO		
X160	Basic Information Schema for registered XML Schemas			NO		
X161	Advanced Information Schema for registered XML Schemas			NO		
X170	XML null handling options			NO		
X171	NIL ON NO CONTENT option			NO		
X181	XML(DOCUMENT(UNTYPED)) type			NO		
X182	XML(DOCUMENT(ANY)) type			NO		
X190	XML(SEQUENCE) type			NO		
X191	XML(DOCUMENT(XMLSCHEMA)) type			NO		
X192	XML(CONTENT(XMLSCHEMA)) type			NO		
X200	XMLQuery			NO		
X201	XMLQuery: RETURNING CONTENT			NO		
X202	XMLQuery: RETURNING SEQUENCE			NO		
X203	XMLQuery: passing a context item			NO		
X204	XMLQuery: initializing an XQuery variable			NO		
X205	XMLQuery: EMPTY ON EMPTY option			NO		
X206	XMLQuery: NULL ON EMPTY option			NO		
X211	XML 1.1 support			NO		
X221	XML passing mechanism BY VALUE			NO		
X222	XML passing mechanism BY REF			NO		
X231	XML(CONTENT(UNTYPED)) type			NO		
X232	XML(CONTENT(ANY)) type			NO		
X241	RETURNING CONTENT in XML publishing			NO		
X242	RETURNING SEQUENCE in XML publishing			NO		
X251	Persistent XML values of XML(DOCUMENT(UNTYPED)) type			NO		
X252	Persistent XML values of XML(DOCUMENT(ANY)) type			NO		
X253	Persistent XML values of XML(CONTENT(UNTYPED)) type			NO		
X254	Persistent XML values of XML(CONTENT(ANY)) type			NO		
X255	Persistent XML values of XML(SEQUENCE) type			NO		
X256	Persistent XML values of XML(DOCUMENT(XMLSCHEMA)) type			NO		
X257	Persistent XML values of XML(CONTENT(XMLSCHEMA)) type			NO		
X260	XML type: ELEMENT clause			NO		
X261	XML type: NAMESPACE without ELEMENT clause			NO		
X263	XML type: NO NAMESPACE with ELEMENT clause			NO		
X264	XML type: schema location			NO		
X271	XMLValidate: data-driven case			NO		
X272	XMLValidate: ACCORDING TO clause			NO		
X273	XMLValidate: ELEMENT clause			NO		
X274	XMLValidate: schema location			NO		
X281	XMLValidate: with DOCUMENT option			NO		
X282	XMLValidate with CONTENT option			NO		
X283	XMLValidate with SEQUENCE option			NO		
X284	XMLValidate NAMESPACE without ELEMENT clause			NO		
X286	XMLValidate: NO NAMESPACE with ELEMENT clause			NO		
X300	XMLTable			NO		
X301	XMLTable: derived column list option			NO		
X302	XMLTable: ordinality column option			NO		
X303	XMLTable: column default option			NO		
X304	XMLTable: passing a context item			NO		
X305	XMLTable: initializing an XQuery variable			NO		
X400	Name and identifier mapping			NO		
X410	Alter column data type: XML type			NO		
