
apply plugin: 'java'

archivesBaseName = 'crate-core'

configurations {
    all*.exclude group: 'org.elasticsearch'
    sharedCompile.extendsFrom compile
}

dependencies {
    compile project(':es')
    compile 'commons-codec:commons-codec:1.9'
    testCompile project(':testing')
}

test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

}

sourceSets {
    test {
        resources {
            srcDir 'src/test/java'
        }
    }
    shared {
        java {
            srcDir "src/main/java/"
            include "io/crate/Streamer*"
            include "io/crate/TimestampFormat*"
            include "io/crate/core/collections/MapComparator*"
            include "io/crate/core/StringUtils*"
            include "io/crate/types/**"
        }
    }
}

task writeBuildInfo << {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'log', '-n', '1', '--pretty=format:%H'
        standardOutput stdout
    }
    def hash = stdout.toString().trim()

    def file = new File(project.projectDir.path + "/src/main/resources/crate-build.properties");
    if(!file.isFile()) {
        def parentDir = new File(file.parent);
        if (!parentDir.isDirectory()) {
            parentDir.mkdirs();
        }
        file.createNewFile();
    }

    ant.propertyfile(file:file.path, comment:'Build Properties') {
        ant.entry(key:'hash',value:hash)
        ant.entry(key:'timestamp', value:System.currentTimeMillis())
    }
}

compileJava.dependsOn writeBuildInfo
