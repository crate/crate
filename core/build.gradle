apply plugin: 'me.champeau.gradle.jmh'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'de.thetaphi.forbiddenapis'

archivesBaseName = 'crate-core'

configurations {
    all*.exclude group: 'org.elasticsearch'
    all*.exclude group: 'org.apache.commons', module: 'commons-math3'
}

dependencies {
    compile project(':es')
    compile ('org.apache.xbean:xbean-finder:4.2') {
        exclude group: 'org.apache.xbean', module: 'xbean-asm-util'
    }

    testCompile project(':testing')
}

test {
    outputs.upToDateWhen { false }

    testLogging.exceptionFormat = 'full'
    jacoco {
        excludes = [
                "*Test*"
                ]
    }
}

forbiddenApisMain {
    bundledSignatures = ['jdk-unsafe', 'jdk-deprecated']
    ignoreFailures = false
}

task getVersion (dependsOn: 'classes') << {
    def stdout = new ByteArrayOutputStream()
    javaexec {
        classpath = sourceSets.main.runtimeClasspath
        main = 'io.crate.Version'
        standardOutput = stdout
    }
    ext.gitTag = "git describe".execute().in.text.trim()
    ext.version = stdout.toString().trim().split(" ")[1].replace(',','').trim()

    if (gradle.taskGraph.hasTask(':app:release')) {
        assert gitTag == version, "Version mismatch gitTag: " + gitTag + " does not match crate version: " + version
    } else if (gradle.taskGraph.hasTask(':app:nightly')) {
        def date = new Date().format('yyyyMMddHHmm')
        def shortHash = "git rev-parse --short HEAD".execute().in.text.trim()
        ext.version = version.replace('-SNAPSHOT','') + "-" + date + "-" + shortHash
    } else if (!gradle.taskGraph.hasTask(':client:uploadArchives') && !gradle.taskGraph.hasTask(':app:uploadArchives')) {
        def shortHash = "git rev-parse --short HEAD".execute().in.text.trim()
        ext.version = version + "-" + shortHash
    }

    logger.quiet("gitTag: " + gitTag)
    logger.quiet("version: " + version)
}


sourceSets {
    test {
        resources {
            srcDir 'src/test/java'
        }
    }
}
