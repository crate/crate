apply from: "$rootDir/gradle/javaModule.gradle"
apply plugin: 'antlr'

archivesBaseName = 'crate-sql-parser'

ext.antlr = [
        source : "src/main/antlr",
        output : "src/main/java/io/crate/sql/parser/antlr/v4",
        package: 'io.crate.sql.parser.antlr.v4'
]

dependencies {
    antlr "org.antlr:antlr4:${versions.antlr}"
    compile "org.antlr:antlr4-runtime:${versions.antlr}"

    compile "com.google.code.findbugs:jsr305:${versions.jsr305}"
    compile "joda-time:joda-time:${versions.jodatime}"
    compile "com.google.guava:guava:${versions.guava}"
    compile group: 'com.google.inject', name: 'guice', version: '3.0' /// remove later

    testCompile "org.hamcrest:hamcrest-all:${versions.hamcrest}"
    testCompile "junit:junit:${versions.junit}"
}

generateGrammarSource {
    outputDirectory = file(antlr.output)
    source = antlr.source
    arguments += ['-package', antlr.package, '-visitor', '-long-messages']
}


test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'

    jacoco {
        excludes = [
                "*Test*",
                "TreeAssertions*",
                "TreePrinter*"
        ]
    }
}

clean {
    delete antlr.output
}
