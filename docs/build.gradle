
def textOut = file("$projectDir/out/text")
def crateDist = file("$projectDir/tmp/crate/")


task bootstrap (type:Exec) {
    inputs.file "$projectDir/bootstrap.py"
    outputs.file "$projectDir/bin/buildout"

    commandLine 'python2.7', "$projectDir/bootstrap.py"
}

task unpackDistTar (dependsOn: project(':app').distTar) << {
    copy {
        includeEmptyDirs = false
        from(tarTree(project(':app').distTar.archivePath)) {
            eachFile { details ->
                details.path =
                    details.path.substring(details.relativePath.segments[0].length())
            }
        }
        into crateDist
    }
}

task buildout (type:Exec, dependsOn: bootstrap) {
    commandLine "$projectDir/bin/buildout", '-N'
}

task itest (type:Exec){

    executable = "$projectDir/bin/test"
}

itest.dependsOn(unpackDistTar, buildout)

task clean << {
    delete textOut
    delete crateDist
}
