.. _version_5.9.0:

==========================
Version 5.9.0 - Unreleased
==========================

.. comment 1. Remove the " - Unreleased" from the header above and adjust the ==
.. comment 2. Remove the NOTE below and replace with: "Released on 20XX-XX-XX."
.. comment    (without a NOTE entry, simply starting from col 1 of the line)
.. NOTE::

    In development. 5.9.0 isn't released yet. These are the release notes for
    the upcoming release.


.. NOTE::

    If you are upgrading a cluster, you must be running CrateDB 4.0.2 or higher
    before you upgrade to 5.9.0.

    We recommend that you upgrade to the latest 5.8 release before moving to
    5.9.0.

    A rolling upgrade from 5.8.x to 5.9.0 is supported.
    Before upgrading, you should `back up your data`_.

.. WARNING::

    Tables that were created before CrateDB 4.x will not function with 5.x
    and must be recreated before moving to 5.x.x.

    You can recreate tables using ``COPY TO`` and ``COPY FROM`` or by
    `inserting the data into a new table`_.

.. _back up your data: https://crate.io/docs/crate/reference/en/latest/admin/snapshots.html
.. _inserting the data into a new table: https://crate.io/docs/crate/reference/en/latest/admin/system-information.html#tables-need-to-be-recreated

.. rubric:: Table of contents

.. contents::
   :local:

.. _version_5.9.0_breaking_changes:

Breaking Changes
================

- Fixed an issue that caused ``WHERE`` clause containing ``NOT`` operator on
  an array type against a non-empty array to incorrectly filter empty arrays,
  e.g.::

      SELECT * FROM t WHERE a != [1];

  It is a breaking change because the fix causes performance degradations.

- Changed the return value of the concat operator to return a ``NULL`` literal
  instead of an empty string when any of the operand is ``NULL``.

- Changed the return value of :ref:`scalar-array_cat` to return a ``NULL``
  literal instead of an empty array when both arguments are ``NULL``.

- Changed the implementation of the :ref:`scalar-array_cat` to return an empty
  array of type `ARRAY(UNDEFINED)` when both arguments are an empty array
  instead of raising an exception.

Deprecations
============

None


Changes
=======

SQL Statements
--------------

None

SQL Standard and PostgreSQL Compatibility
-----------------------------------------

- The ``proisstrict`` property of the ``pg_catalog.pg_proc`` table now returns
  true or false depending on if a function always returns null if any call
  argument is null. Before the property's value was a static ``null``.

Data Types
----------

None

Scalar and Aggregation Functions
--------------------------------

- Added :ref:`topk aggregation function <aggregation-topk>` which computes
  the k most frequent argument values and their frequencies.

- Changed :ref:`pg_get_userbyid <scalar-pg_get_userbyid>` to return the matching
  user or ``unknown`` instead of always ``crate``.

- Added support of the ``array || element`` operator as an alias for the
  :ref:`array_append(array, value) <scalar-array_append>` scalar function for
  improved compatibility with PostgreSQL.

Performance and Resilience Improvements
---------------------------------------

None

Administration and Operations
-----------------------------

- Added support for :ref:`Shared Access Signatures (SAS) tokens <sql-create-repo-azure-sas-token>`
  as an alternative for authentication for :ref:`Azure repositories <sql-create-repo-azure>`.

- Added ``id``, ``reason``, ``total_shards`` and ``include_global_state``
  columns to the :ref:`sys.snapshots <sys-snapshots>` table.
