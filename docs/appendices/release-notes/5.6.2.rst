.. _version_5.6.2:

==========================
Version 5.6.2 - Unreleased
==========================

.. comment 1. Remove the " - Unreleased" from the header above and adjust the ==
.. comment 2. Remove the NOTE below and replace with: "Released on 20XX-XX-XX."
.. comment    (without a NOTE entry, simply starting from col 1 of the line)

.. NOTE::
    In development. 5.6.2 isn't released yet. These are the release notes for
    the upcoming release.

.. NOTE::

    If you are upgrading a cluster, you must be running CrateDB 4.0.2 or higher
    before you upgrade to 5.6.2.

    We recommend that you upgrade to the latest 5.5 release before moving to
    5.6.2.

    A rolling upgrade from 5.5.x to 5.6.2 is supported.
    Before upgrading, you should `back up your data`_.

.. WARNING::

    Tables that were created before CrateDB 4.x will not function with 5.x
    and must be recreated before moving to 5.x.x.

    You can recreate tables using ``COPY TO`` and ``COPY FROM`` or by
    `inserting the data into a new table`_.

.. _back up your data: https://crate.io/docs/crate/reference/en/latest/admin/snapshots.html
.. _inserting the data into a new table: https://crate.io/docs/crate/reference/en/latest/admin/system-information.html#tables-need-to-be-recreated

.. rubric:: Table of contents

.. contents::
   :local:

See the :ref:`version_5.6.0` release notes for a full list of changes in the
5.6 series.

Fixes
=====

- Fixed :ref:`trim <scalar-trim>`, :ref:`ltrim <scalar-ltrim>`,
  :ref:`rtrim <scalar-rtrim>`, and :ref:`btrim <scalar-btrim>` scalar functions
  to return ``NULL`, instead of the original string, when the ``trimmingText``
  argument is ``NULL``, complying with PostgreSQL behaviour for these functions.

- Fixed a regression introduced in 5.6.0 that caused
  :ref:`concat_ws <scalar-concat-ws>` returning the wrong result when used on a
  column with ``NULL`` values in the WHERE-clause combined with a NOT-predicate.
  An example::

    SELECT * FROM t1 WHERE NOT CONCAT_WS(true, column_with_null_value, false);

- Fixed a bug (present since at least :ref:`version_5.2.0`) where columns cast to
  a numeric type with a non-default precision could return the unscaled value in
  a multi-node cluster

- Fixed an issue that caused ``SELECT`` statements with ``WHERE`` clause having
  ``primary keys`` under ``NOT`` predicate to return invalid results.

- Fixed an issue that caused ``SELECT`` statements with ``WHERE`` clause having
  ``NOT`` predicate whose argument consists of ``NULLABLE`` scalar functions
  with ``NULL`` argument that could evaluate to ``NULL`` to return invalid
  results. An example ::

    SELECT * FROM t WHERE (col % NULL) != 1;

  A ``NULLABLE`` function in this context means a function returning ``NULL``
  if and only if the input is a ``NULL``.

