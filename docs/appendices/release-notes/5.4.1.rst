.. _version_5.4.1:

==========================
Version 5.4.1 - Unreleased
==========================

.. comment 1. Remove the " - Unreleased" from the header above and adjust the ==
.. comment 2. Remove the NOTE below and replace with: "Released on 20XX-XX-XX."
.. comment    (without a NOTE entry, simply starting from col 1 of the line)

.. NOTE::

    In development. 5.4.1 isn't released yet. These are the release notes for
    the upcoming release.

.. NOTE::

    If you are upgrading a cluster, you must be running CrateDB 4.0.2 or higher
    before you upgrade to 5.4.1.

    We recommend that you upgrade to the latest 5.3 release before moving to
    5.4.1.

    A rolling upgrade from 5.3.x to 5.4.1 is supported.
    Before upgrading, you should `back up your data`_.

.. WARNING::

    Tables that were created before CrateDB 4.x will not function with 5.x
    and must be recreated before moving to 5.x.x.

    You can recreate tables using ``COPY TO`` and ``COPY FROM`` or by
    `inserting the data into a new table`_.

.. _back up your data: https://crate.io/docs/crate/reference/en/latest/admin/snapshots.html
.. _inserting the data into a new table: https://crate.io/docs/crate/reference/en/latest/admin/system-information.html#tables-need-to-be-recreated

.. rubric:: Table of Contents

.. contents::
   :local:

See the :ref:`version_5.4.0` release notes for a full list of changes in the
5.4 series.


Fixes
=====

- Fixed ``IndexOutOfBoundsException`` caused by an ``IS [NOT] NULL`` filter on
  a sub-column of an object or object array in a ``WHERE`` clause, e.g. ::

    CREATE TALE test (o1 ARRAY(OBJECT AS (col INT)), o2 OBJECT);
    SELECT * FROM test WHERE o1[1]['col'] IS NULL;
    => IndexOutOfBoundsException[Index: 1 Size: 1]
    SELECT * FROM test AS T WHERE T.o2['unknown_col'] IS NOT NULL;
    => IndexOutOfBoundsException[Index: 1 Size: 1]

- Fixed an issue which caused INSERT INTO statements to skip generated
  expression validation for partitioned columns.

- Fixed an issue which caused INSERT INTO statements to leave behind
  empty partitions if NULL or CHECK constraint on partitioned by column failed.
