.. _version_6.0.4:

==========================
Version 6.0.4 - Unreleased
==========================

.. comment 1. Remove the " - Unreleased" from the header above and adjust the ==
.. comment 2. Remove the NOTE below and replace with: "Released on 20XX-XX-XX."
.. comment    (without a NOTE entry, simply starting from col 1 of the line)
.. NOTE::

    In development. 6.0.4 isn't released yet. These are the release notes for
    the upcoming release.

.. NOTE::

    If you are upgrading a cluster, you must be running CrateDB 5.0.0 or higher
    before you upgrade to 6.0.4.

    We recommend that you upgrade to the latest 5.10 release before moving to
    6.0.4.

    A rolling upgrade from >= 5.10.1 to 6.0.4 is supported.
    Before upgrading, you should `back up your data`_.

.. WARNING::

    Tables that were created before CrateDB 5.x will not function with 6.x
    and must be recreated before moving to 6.x.x.

    You can recreate tables using ``COPY TO`` and ``COPY FROM`` or by
    `inserting the data into a new table`_.

.. _back up your data: https://cratedb.com/docs/crate/reference/en/latest/admin/snapshots.html
.. _inserting the data into a new table: https://cratedb.com/docs/crate/reference/en/latest/admin/system-information.html#tables-need-to-be-recreated

.. rubric:: Table of contents

.. contents::
   :local:


See the :ref:`version_6.0.0` release notes for a full list of changes in the 6.0
series.

Fixes
=====

- Improved ``WHERE`` clause analysis for queries on tables with both ``PARTITION
  BY`` and ``CLUSTERED BY`` clause to narrow the partitions and shards that are
  hit if the query filters on the ``PARTITIONED BY`` and ``CLUSTERED BY``
  columns. An example::

    CREATE TABLE tbl (x int, c int, p int) clustered by (c) partitioned by (p);
    SELECT * FROM tbl WHERE c = 1 and p = 1;

  In this case the query will only search in the partition ``p=1`` and hit a
  single shard depending on the routing for ``c=1``

- Fixed an issue where generated sub-columns were missing from results returned
  by the ``RETURNING`` clause.
