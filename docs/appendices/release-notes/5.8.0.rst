.. _version_5.8.0:

==========================
Version 5.8.0 - Unreleased
==========================

.. comment 1. Remove the " - Unreleased" from the header above and adjust the ==
.. comment 2. Remove the NOTE below and replace with: "Released on 20XX-XX-XX."
.. comment    (without a NOTE entry, simply starting from col 1 of the line)
.. NOTE::

    In development. 5.8.0 isn't released yet. These are the release notes for
    the upcoming release.


.. NOTE::

    If you are upgrading a cluster, you must be running CrateDB 4.0.2 or higher
    before you upgrade to 5.8.0.

    We recommend that you upgrade to the latest 5.7 release before moving to
    5.8.0.

    A rolling upgrade from 5.7.x to 5.8.0 is supported.
    Before upgrading, you should `back up your data`_.

.. WARNING::

    Tables that were created before CrateDB 4.x will not function with 5.x
    and must be recreated before moving to 5.x.x.

    You can recreate tables using ``COPY TO`` and ``COPY FROM`` or by
    `inserting the data into a new table`_.

.. _back up your data: https://crate.io/docs/crate/reference/en/latest/admin/snapshots.html
.. _inserting the data into a new table: https://crate.io/docs/crate/reference/en/latest/admin/system-information.html#tables-need-to-be-recreated

.. rubric:: Table of contents

.. contents::
   :local:


Breaking Changes
================

- Removed ``network`` column from :ref:`sys.nodes <sys-nodes>` table. The column
  was deprecated since `version_2.3.0_` and all of the sub-columns where
  returning 0.

Deprecations
============

None


Changes
=======

SQL Statements
--------------

None

SQL Standard and PostgreSQL Compatibility
-----------------------------------------

None

Data Types
----------

None

Scalar and Aggregation Functions
--------------------------------

- `azatyamanaev <https://github.com/azatyamanaev>`_ added support for the
   :ref:`sign <scalar-sign>` function.

- `Dhruv Patel <https://github.com/DHRUV6029>`_ added support for the
  :ref:`strpos <scalar-strpos>` scalar function.

- Added a :ref:`vector_similarity <scalar_vector_similarity>` scalar.

Performance and Resilience Improvements
---------------------------------------

- Extended the lookup-join optimization to make it applicable to more complex
  queries when they include sub-queries, an inner-equi-join and if there is a
  large imbalance in size between the joined tables. This optimization can be
  disabled with the session setting::

     SET optimizer_equi_join_to_lookup_join = false

  Note that this setting is experimental, and may change in the future.

Administration and Operations
-----------------------------

None
