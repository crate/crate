apply from: "$rootDir/gradle/javaModule.gradle"

archivesBaseName = 'crate-admin-ui'

dependencies {
    compile project(':core')
    testCompile project(':es:es-transport')
    testCompile project(':integration-testing')
}

ext {
    plugin_crateadmin_version = '1.1.1'
    downloadDir = new File(buildDir, 'downloads')
}

def extractTopfolder(File src, String trg) {
    copy {
        includeEmptyDirs = false
        FileTree ft
        if (src.name.endsWith('.tar.gz')) {
            ft = tarTree(src)
        }
        from(ft) {
            eachFile {
                details -> details.path = details.path.substring(details.relativePath.segments[0].length())
            }
        }
        into trg
    }
}

task writePropertiesFile {
    doLast {
        def file = new File("${buildDir}/crate-admin/plugin-descriptor.properties")
        if (!file.isFile()) {
            def parentDir = new File(file.parent)
            if (!parentDir.isDirectory()) {
                parentDir.mkdirs()
            }
            file.createNewFile()
        }
        ant.propertyfile(file: file.path, comment: 'Plugin Descriptor') {
            ant.entry(key: 'name', value: project.archivesBaseName)
            ant.entry(key: 'description', value: project.description)
            ant.entry(key: 'version', value: plugin_crateadmin_version)
            ant.entry(key: 'site', value: true)
            ant.entry(key: 'elasticsearch.version', value: "${versions.elasticsearch}")
            ant.entry(key: 'java.version', value: project.targetCompatibility)
            ant.entry(key: 'classname', value: 'io.crate.plugin.AdminUIPlugin')
        }
        file.createNewFile();
    }
}


task downloadPlugin(dependsOn: [writePropertiesFile, jar]) {
    doLast {
        def dest = download(
                downloadDir,
                "https://cdn.crate.io/downloads/releases/crate-admin-${plugin_crateadmin_version}.tar.gz",
                "crate-admin-${plugin_crateadmin_version}.tar.gz"
        )
        extractTopfolder(dest, "${buildDir}/crate-admin/_site")
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }

    test {
        java {
            srcDir 'src/test/java'
        }
    }
}

sourceSets.main.output.resourcesDir = null
sourceSets.test.output.resourcesDir = null
