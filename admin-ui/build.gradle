apply plugin: 'java'

archivesBaseName = 'crate-admin-ui'

// we do not want to have elasticsearch here, since we provide it in :es
configurations {
    all*.exclude group: 'org.elasticsearch'
}

dependencies {
    compile project(':es')
    compile project(':core')
}

ext {
    plugin_crateadmin_version = '0.17.0'
    downloadDir = new File(buildDir, 'downloads')
}


def extractTopfolder(File src, String trg){
    copy {
        includeEmptyDirs = false
        FileTree ft
        if(src.name.endsWith('.tar.gz')) {
            ft = tarTree(src)
        }
        from(ft) {
            eachFile { details ->
                details.path =
                    details.path.substring(details.relativePath.segments[0].length())
            }
        }
        into trg
    }
}


task writePropertiesFile << {
    def file = new File("${buildDir}/crate-admin/plugin-descriptor.properties");
    if(!file.isFile()) {
        def parentDir = new File(file.parent);
        if (!parentDir.isDirectory()) {
            parentDir.mkdirs();
        }
        file.createNewFile();
    }
    ant.propertyfile(file:file.path, comment:'Plugin Descriptor') {
        ant.entry(key:'name', value:project.archivesBaseName)
        ant.entry(key:'description', value:project.description)
        ant.entry(key:'version', value:plugin_crateadmin_version)
        ant.entry(key:'site', value:true)
    }
}


task downloadPlugin (dependsOn: [writePropertiesFile]) << {
    def dest = download(
        downloadDir,
        "https://cdn.crate.io/downloads/releases/crate-admin-${plugin_crateadmin_version}.tar.gz",
        "crate-admin-${plugin_crateadmin_version}.tar.gz"
    )
    extractTopfolder(dest, "${buildDir}/crate-admin/_site")
}
